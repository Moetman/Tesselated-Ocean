#version 430 compatibility

layout (location = 1) in vec3 Position; 
layout (location = 0) in vec2 TexCoord;
layout (location = 2) in vec3 Normal;



#define textureSize 512.0
#define texelSize 1.0 / 512.0

vec4 texture2D_bilinear(  sampler2D tex, vec2 uv )
{
	vec2 f = fract( uv.xy * textureSize );
	vec4 t00 = texture2D( tex, uv );
	vec4 t10 = texture2D( tex, uv + vec2( texelSize, 0.0 ));
	vec4 tA = mix( t00, t10, f.x );
	vec4 t01 = texture2D( tex, uv + vec2( 0.0, texelSize ) );
	vec4 t11 = texture2D( tex, uv + vec2( texelSize, texelSize ) );
	vec4 tB = mix( t01, t11, f.x );
	return mix( tA, tB, f.y );
}


uniform sampler2D oceanHeightmap;


uniform float time;

//in vec4 osg_Vertex;\n"
out vec3 vPosition;
out vec2 TexCoord_CS_in;
out vec3 Normal_CS_in; 

void main()
{
	
	
	
	
	 vec2 index = TexCoord.st;
	  vec2 index2 = TexCoord.st; 
	  
	   index.x += TexCoord.s *  (time/60 );
	   //index.y += TexCoord_GS_in.t *  0.9;
	   
	  
	
	  vec3 pos1 =  texture2D_bilinear( oceanHeightmap, index ).xyz;   //texture2D(oceanHeightmap, index.st ).xyz ;
	  vec3 pos2 =  texture2D_bilinear( oceanHeightmap, index ).xyz;  //texture2D(oceanHeightmap, index2.st ).xyz ;
	
	  float d0 = 0.2989*pos1.r + 0.5870*pos1.g + 0.1140*pos1.b;
	  float d1 = 0.2989*pos2.r + 0.5870*pos2.g + 0.1140*pos2.b;
	  
	  //Position.z = (d0);	
	
	
	
	
	
	vPosition =Position.xyz;
	
	
	vPosition.z = (d0);	
	
	
	TexCoord_CS_in = TexCoord;
	Normal_CS_in = Normal;
}